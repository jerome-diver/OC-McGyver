!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
Controller	app/Controllers/Controller.py	/^class Controller:$/;"	c
Get	app/Models/model.py	/^    def Get(self, param):$/;"	m	class:Model
GuardModel	app/Models/person_model.py	/^class GuardModel(PersonModel):$/;"	c
GuardView	app/Views/person_view.py	/^class GuardView(View):$/;"	c
HeroModel	app/Models/person_model.py	/^class HeroModel(PersonModel):$/;"	c
HeroView	app/Views/person_view.py	/^class HeroView(View):$/;"	c
MapController	app/Controllers/map_controller.py	/^class MapController(Controller):$/;"	c
MapModel	app/Models/map_model.py	/^class MapModel(Model):$/;"	c
MapView	app/Views/map_view.py	/^class MapView(View):$/;"	c
Model	app/Models/model.py	/^class Model:$/;"	c
OC-McGyver	README.md	/^# OC-McGyver$/;"	c
ObjectController	app/Controllers/object_controller.py	/^class ObjectController(Controller):$/;"	c
ObjectModel	app/Models/object_model.py	/^class ObjectModel(Model):$/;"	c
ObjectView	app/Views/object_view.py	/^class ObjectView(View):$/;"	c
PersonController	app/Controllers/person_controller.py	/^class PersonController(Controller):$/;"	c
PersonModel	app/Models/person_model.py	/^class PersonModel(Model):$/;"	c
RoomController	app/Controllers/room_controller.py	/^class RoomController(Controller):$/;"	c
RoomModel	app/Models/room_model.py	/^class RoomModel(Model):$/;"	c
RoomView	app/Views/room_view.py	/^class RoomView(View):$/;"	c
Screen	app/Views/View.py	/^	def Screen(self, param):$/;"	m	class:View
Set	app/Models/model.py	/^    def Set(self, param):$/;"	m	class:Model
Show	app/Views/View.py	/^	def Show(self, param):$/;"	m	class:View
The game story	README.md	/^## The game story$/;"	s
View	app/Views/View.py	/^class View:$/;"	c
__init__	app/Controllers/Controller.py	/^	def __init__(self):$/;"	m	class:Controller
__init__	app/Controllers/map_controller.py	/^	def __init__(self):$/;"	m	class:MapController
__init__	app/Controllers/object_controller.py	/^	def __init__(self):$/;"	m	class:ObjectController
__init__	app/Controllers/person_controller.py	/^	def __init__(self):$/;"	m	class:PersonController
__init__	app/Controllers/room_controller.py	/^	def __init__(self):$/;"	m	class:RoomController
__init__	app/Models/map_model.py	/^    def __init__(self):$/;"	m	class:MapModel
__init__	app/Models/model.py	/^	def __init__(self):$/;"	m	class:Model
__init__	app/Models/object_model.py	/^	def __init__(self):$/;"	m	class:ObjectModel
__init__	app/Models/person_model.py	/^	def __init__(self):$/;"	m	class:GuardModel
__init__	app/Models/person_model.py	/^	def __init__(self):$/;"	m	class:HeroModel
__init__	app/Models/person_model.py	/^	def __init__(self):$/;"	m	class:PersonModel
__init__	app/Models/room_model.py	/^	def __init__(self, map, room):		# room is a tuple(line,row)$/;"	m	class:RoomModel
__init__	app/Views/View.py	/^	def __init__(self):$/;"	m	class:View
__init__	app/Views/map_view.py	/^	def __init__(self):$/;"	m	class:MapView
__init__	app/Views/object_view.py	/^	def __init__(self):$/;"	m	class:ObjectView
__init__	app/Views/person_view.py	/^	def __init__(self):$/;"	m	class:HeroView
__init__	app/Views/person_view.py	/^    def __init__(self):$/;"	m	class:GuardView
__init__	app/Views/room_view.py	/^	def __init__(self):$/;"	m	class:RoomView
appendRoom	app/Models/map_model.py	/^    def appendRoom(self, roomModel):$/;"	m	class:MapModel
checkDirection	app/Models/model.py	/^    def checkDirection(self, direction):$/;"	m	class:Model
checkRoom	app/Models/model.py	/^    def checkRoom(self, room):$/;"	m	class:Model
color	app/Models/room_model.py	/^	color = "#FFF"$/;"	v	class:RoomModel
directions	app/Models/model.py	/^	directions = ("north", "west", "south", "east")$/;"	v	class:Model
east_walls	app/Models/map_model.py	/^    east_walls = (b'\\x04',b'\\x05',b'\\x08',b'\\x09',b'\\x0b',b'\\x0c',b'\\x0d',b'\\x0f')$/;"	v	class:MapModel
existRoom	app/Models/room_model.py	/^	def existRoom(self, room):$/;"	m	class:RoomModel
full_close	app/Models/room_model.py	/^	full_close = (True,True,True,True,True,True,True,True)$/;"	v	class:RoomModel
generateUniqColor	app/Models/room_model.py	/^    def generateUniqColor(self, map):$/;"	m	class:RoomModel
generateWall	app/Models/room_model.py	/^	def generateWall():$/;"	m	class:RoomModel
getCoordonates	app/Models/room_model.py	/^	def getCoordonates(self):$/;"	m	class:RoomModel
getWallFor	app/Models/room_model.py	/^	def getWallFor(self, edge):$/;"	m	class:RoomModel
hasRoomAt	app/Models/room_model.py	/^	def hasRoomAt(self, direction):$/;"	m	class:RoomModel
hasWallAt	app/Models/map_model.py	/^    def hasWallAt(self, room, edge):$/;"	m	class:MapModel
loadMap	app/Models/map_model.py	/^    def loadMap(self):$/;"	m	class:MapModel
loadRoom	app/Models/room_model.py	/^    def loadRoom(self, map):$/;"	m	class:RoomModel
north_walls	app/Models/map_model.py	/^    north_walls = (b'\\x02',b'\\x05',b'\\x06',b'\\x07',b'\\x0b',b'\\x0c',b'\\x0e',b'\\x0f')$/;"	v	class:MapModel
oppositDirection	app/Models/model.py	/^	def oppositDirection(self, direction):$/;"	f	member:Model.checkDirection	file:
roomCoordonatesAt	app/Models/room_model.py	/^	def roomCoordonatesAt(self, direction):$/;"	m	class:RoomModel
rooms	app/Models/map_model.py	/^    rooms = { }$/;"	v	class:MapModel
rooms	app/Models/model.py	/^	rooms = { }		# { (line,row): { position: (boolean) } }$/;"	v	class:Model
south_walls	app/Models/map_model.py	/^    south_walls = (b'\\x03',b'\\x07',b'\\x09',b'\\x0a',b'\\x0c',b'\\x0d',b'\\x0e',b'\\x0f')$/;"	v	class:MapModel
wallClockWisePosition	app/Models/map_model.py	/^    def wallClockWisePosition(self,room):$/;"	m	class:MapModel
wallPosition	app/Models/map_model.py	/^    def wallPosition(self, room):   # room is tuple matrix: (line, row)$/;"	m	class:MapModel
wallPositions	app/Models/map_model.py	/^    def wallPositions(self):$/;"	m	class:MapModel
walls	app/Models/map_model.py	/^    walls = { }    # { (line, row) => byte value }$/;"	v	class:MapModel
walls	app/Models/room_model.py	/^	walls = { }	# {"edge_direction": (boolean) }$/;"	v	class:RoomModel
west_walls	app/Models/map_model.py	/^    west_walls = (b'\\x01',b'\\x06',b'\\x08',b'\\x0a',b'\\x0b',b'\\x0d',b'\\x0e',b'\\x0f')$/;"	v	class:MapModel
